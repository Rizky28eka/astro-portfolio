---
import { getCollection } from "astro:content";
import PageLayout from "@layouts/PageLayout.astro";
import { WORK } from "@consts";

// Get work collection
const rawCollection = await getCollection("work");
// Filter out drafts
const collection = rawCollection.filter(item => !item.data.draft);
// Sort by dateStart descending
collection.sort((a, b) => {
  const dateA = new Date(a.data.dateStart || 0).getTime();
  const dateB = new Date(b.data.dateStart || 0).getTime();
  return dateB - dateA;
});
// Render content components
const work = await Promise.all(
  collection.map(async (item) => {
    const { Content } = await item.render();
    return { ...item, Content };
  })
);

// Format date function
function formatWorkDate(input: Date | string | undefined) {
  if (!input) return "";
  
  // Return "Present" directly if it's the string "Present"
  if (input === "Present") return "Present";
  
  // Parse date if it's a string (excluding "Present")
  const date = typeof input === "string" ? new Date(input) : input;
  if (isNaN(date.getTime())) return "Invalid date";
  
  const month = date.toLocaleDateString("en-US", { month: "short" });
  const year = date.getFullYear();
  return `${month} ${year}`;
}
---

<PageLayout title={WORK.TITLE} description={WORK.DESCRIPTION}>
  <div class="py-24 px-24 md:px-48 lg:px-72 xl:px-96 relative">
    <!-- Background decoration -->
    <div class="absolute inset-0 overflow-hidden pointer-events-none">
      <div class="absolute -top-40 -right-40 w-80 h-80 rounded-full bg-gradient-to-br from-purple-400/10 to-pink-400/10 blur-3xl"></div>
      <div class="absolute -bottom-40 -left-40 w-80 h-80 rounded-full bg-gradient-to-tr from-blue-400/10 to-cyan-400/10 blur-3xl"></div>
    </div>

    <!-- Header Section -->
    <div class="text-center mb-16 relative z-10">
      <h1 class="text-5xl md:text-6xl font-bold mb-6 bg-gradient-to-r from-gray-900 via-purple-900 to-gray-900 dark:from-white dark:via-purple-300 dark:to-white bg-clip-text text-transparent">
        {WORK.TITLE}
      </h1>
      <div class="w-24 h-1 bg-gradient-to-r from-purple-500 to-pink-500 mx-auto rounded-full"></div>
    </div>

    <div class="timeline relative z-10">
      {work.map((entry, index) => (
        <div class="timeline-entry animate group relative">
          <!-- Timeline line -->
          {index < work.length - 1 && (
            <div class="absolute left-[14px] top-14 bottom-0 w-0.5 bg-gradient-to-b from-purple-500/20 to-pink-500/10"></div>
          )}
          
          <div class="flex gap-6 py-8 group-first:pt-0">
            <!-- Timeline dot -->
            <div class="relative z-10 mt-1.5">
              <div class="timeline-dot w-7 h-7 rounded-full border-2 border-purple-500/40 bg-white dark:bg-gray-900 flex items-center justify-center shadow-md transition-all duration-300 group-hover:scale-110 group-hover:border-purple-500">
                <span class="text-xs font-bold">{work.length - index}</span>
              </div>
            </div>
            
            <!-- Card content -->
            <div class="flex-grow">
              <!-- Date and Location row -->
              <div class="flex justify-between items-center flex-wrap gap-2 mb-3">
                <div class="text-sm font-medium px-3 py-1 bg-gradient-to-r from-purple-500/10 to-pink-500/10 rounded-full">
                  {formatWorkDate(entry.data.dateStart)} â€“ {entry.data.dateEnd ? formatWorkDate(entry.data.dateEnd) : "Present"}
                </div>
                
                {entry.data.location && (
                  <div class="text-sm italic text-gray-600 dark:text-gray-400 flex items-center gap-1">
                    <svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                      <path d="M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z"></path>
                      <circle cx="12" cy="10" r="3"></circle>
                    </svg>
                    {entry.data.location}
                  </div>
                )}
              </div>
              
              <!-- Company and Role -->
              <div class="backdrop-blur-sm bg-white/50 dark:bg-gray-800/50 rounded-2xl p-8 border border-gray-200/50 dark:border-gray-700/50 shadow-xl transition-all duration-300 group-hover:shadow-2xl">
                <div class="mb-4">
                  <div class="text-2xl font-bold bg-gradient-to-r from-purple-600 to-pink-600 bg-clip-text text-transparent">
                    {entry.data.company}
                  </div>
                  <div class="text-lg font-medium mt-1 text-gray-700 dark:text-gray-300">
                    {entry.data.role}
                  </div>
                </div>
                
                <!-- Content -->
                <article class="prose dark:prose-invert max-w-none">
                  <entry.Content />
                </article>
              </div>
            </div>
          </div>
        </div>
      ))}
    </div>
  </div>
</PageLayout>

<style>
  /* Custom animations */
  @keyframes float {
    0%, 100% {
      transform: translateY(0px);
    }
    50% {
      transform: translateY(-10px);
    }
  }

  .animate-float {
    animation: float 6s ease-in-out infinite;
  }

  .timeline-entry {
    transition: transform 0.3s ease;
  }
  
  .timeline-entry:hover {
    transform: translateX(4px);
  }

  .card-content {
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
  }

  @media (prefers-color-scheme: dark) {
    .card-content {
      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
    }
  }
</style>