---
import { getCollection } from "astro:content"
import PageLayout from "@layouts/PageLayout.astro"
import TopLayout from "@layouts/TopLayout.astro"
import BottomLayout from "@layouts/BottomLayout.astro"
import { EDUCATION } from "@consts"

// Get education collection and sort by end date (descending)
const collection = await getCollection("education")
collection.sort((a, b) => new Date(b.data.dateEnd).getTime() - new Date(a.data.dateEnd).getTime())

// Render content components
const education = await Promise.all(
  collection.map(async (item) => {
    const { Content } = await item.render()
    return { ...item, Content }
  })
)

// Format date function
function formatDate(input) {
  if (!input) return "Present"
  if (typeof input === "string") return input
  const month = input.toLocaleDateString("en-US", {
    month: "short",
  })
  const year = new Date(input).getFullYear()
  return `${month} ${year}`
}
---

<PageLayout title={EDUCATION.TITLE} description={EDUCATION.DESCRIPTION}>
  <TopLayout>
    <div class="animate page-heading flex items-center gap-3 mb-8">
      <span class="text-3xl">{EDUCATION.TITLE}</span>
      <div class="h-px flex-grow bg-gradient-to-r from-black/50 to-transparent dark:from-white/50"></div>
    </div>
  </TopLayout>
  
  <BottomLayout>
    <div class="education-timeline relative">
      {education.map((entry, index) => (
        <div class="timeline-entry animate group relative">
          <!-- Timeline connecting line -->
          {index < education.length - 1 && (
            <div class="absolute left-[14px] top-14 bottom-0 w-0.5 bg-gradient-to-b from-black/20 to-black/10 dark:from-white/20 dark:to-white/10"></div>
          )}
          
          <div class="flex gap-6 py-8 group-first:pt-0">
            <!-- Timeline dot with graduation cap icon -->
            <div class="relative z-10 mt-1.5">
              <div class="timeline-dot w-7 h-7 rounded-full border-2 border-black/40 dark:border-white/40 bg-white dark:bg-gray-900 flex items-center justify-center shadow-md transition-all duration-300 group-hover:scale-110 group-hover:border-blue-500">
                <svg xmlns="http://www.w3.org/2000/svg" class="w-3.5 h-3.5" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                  <path d="M22 10v6M2 10l10-5 10 5-10 5z"/>
                  <path d="M6 12v5c0 2 2 3 6 3s6-1 6-3v-5"/>
                </svg>
              </div>
            </div>
            
            <!-- Card content -->
            <div class="flex-grow">
              <!-- Date range -->
              <div class="flex justify-between items-center flex-wrap gap-2 mb-3">
                <div class="text-sm font-medium px-3 py-1 bg-black/5 dark:bg-white/10 rounded-full">
                  {formatDate(entry.data.dateStart)} - {formatDate(entry.data.dateEnd)}
                </div>
              </div>
              
              <!-- School and Degree info -->
              <div class="education-card p-5 rounded-lg bg-black/5 dark:bg-white/5 transition-all duration-300 group-hover:bg-black/10 dark:group-hover:bg-white/10">
                <div class="flex flex-col md:flex-row md:justify-between md:items-start gap-2 mb-4">
                  <div>
                    <div class="text-xl font-bold text-black dark:text-white transition-colors duration-300 group-hover:text-blue-600 dark:group-hover:text-blue-400">
                      {entry.data.school}
                    </div>
                    <div class="text-lg font-medium mt-1 text-gray-700 dark:text-gray-300">
                      {entry.data.degree}
                    </div>
                  </div>
                </div>
                
                <!-- Description content -->
                <article class="prose dark:prose-invert max-w-none">
                  <entry.Content />
                </article>
                
                <!-- Achievements section with improved styling -->
                {entry.data.achievements && entry.data.achievements.length > 0 && (
                  <div class="mt-5 p-4 border-t border-black/10 dark:border-white/10">
                    <div class="flex items-center gap-2 mb-3">
                      <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5 text-amber-500" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                        <circle cx="12" cy="8" r="6"/>
                        <path d="M15.477 12.89 17 22l-5-3-5 3 1.523-9.11"/>
                      </svg>
                      <p class="font-medium">Key Achievements</p>
                    </div>
                    <ul class="achievements-list space-y-2">
                      {entry.data.achievements.map(achievement => (
                        <li class="flex items-start gap-2">
                          <span class="inline-block w-1.5 h-1.5 rounded-full bg-amber-500 mt-2"></span>
                          <span>{achievement}</span>
                        </li>
                      ))}
                    </ul>
                  </div>
                )}
              </div>
            </div>
          </div>
        </div>
      ))}
    </div>
  </BottomLayout>
</PageLayout>

<style>
  /* Additional styles */
  .timeline-entry {
    transition: transform 0.3s ease;
  }
  .timeline-entry:hover {
    transform: translateX(4px);
  }
  .education-card {
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
  }
  @media (prefers-color-scheme: dark) {
    .education-card {
      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
    }
  }
  .page-heading {
    margin-bottom: 2rem;
    font-weight: 700;
  }
  .achievements-list li {
    position: relative;
    transition: transform 0.2s ease;
  }
  .achievements-list li:hover {
    transform: translateX(2px);
  }
</style>