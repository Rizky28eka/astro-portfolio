---
import { getCollection } from "astro:content"
import PageLayout from "@layouts/PageLayout.astro"
import { EDUCATION } from "@consts"

// Get education collection and sort by end date (descending)
const collection = await getCollection("education")
collection.sort((a, b) => {
  const dateA = a.data.dateEnd ? new Date(a.data.dateEnd) : null;
  const dateB = b.data.dateEnd ? new Date(b.data.dateEnd) : null;
  
  if (!dateA && !dateB) return 0;
  if (!dateA) return 1;
  if (!dateB) return -1;
  
  return dateB.getTime() - dateA.getTime();
});

// Render content components
const education = await Promise.all(
  collection.map(async (item) => {
    const { Content } = await item.render()
    return { ...item, Content }
  })
)

function formatDate(input?: string | Date): string {
  if (!input) return "Present";
  if (input === "present") return "Present";

  const date = typeof input === "string" ? new Date(input) : input;

  if (isNaN(date.getTime())) return "Invalid Date";

  const month = date.toLocaleString("en-US", { month: "short" });
  const year = date.getFullYear();

  return `${month} ${year}`;
}

---

<PageLayout title={EDUCATION.TITLE} description={EDUCATION.DESCRIPTION}>
  <div class="py-24 px-24 md:px-48 lg:px-72 xl:px-96 relative">
    <!-- Background decoration -->
    <div class="absolute inset-0 overflow-hidden pointer-events-none">
      <div class="absolute -top-40 -right-40 w-80 h-80 rounded-full bg-gradient-to-br from-purple-400/10 to-pink-400/10 blur-3xl"></div>
      <div class="absolute -bottom-40 -left-40 w-80 h-80 rounded-full bg-gradient-to-tr from-blue-400/10 to-cyan-400/10 blur-3xl"></div>
    </div>

    <!-- Header Section -->
    <div class="text-center mb-16 relative z-10">
      <h1 class="text-5xl md:text-6xl font-bold mb-6 bg-gradient-to-r from-gray-900 via-purple-900 to-gray-900 dark:from-white dark:via-purple-300 dark:to-white bg-clip-text text-transparent">
        {EDUCATION.TITLE}
      </h1>
      <div class="w-24 h-1 bg-gradient-to-r from-purple-500 to-pink-500 mx-auto rounded-full"></div>
    </div>

    <div class="education-timeline relative z-10">
      {education.map((entry, index) => (
        <div class="timeline-entry animate group relative">
          <!-- Timeline connecting line -->
          {index < education.length - 1 && (
            <div class="absolute left-[14px] top-14 bottom-0 w-0.5 bg-gradient-to-b from-purple-500/20 to-pink-500/10"></div>
          )}
          
          <div class="flex gap-6 py-8 group-first:pt-0">
            <!-- Timeline dot with graduation cap icon -->
            <div class="relative z-10 mt-1.5">
              <div class="timeline-dot w-7 h-7 rounded-full border-2 border-purple-500/40 bg-white dark:bg-gray-900 flex items-center justify-center shadow-md transition-all duration-300 group-hover:scale-110 group-hover:border-purple-500">
                <svg xmlns="http://www.w3.org/2000/svg" class="w-3.5 h-3.5" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                  <path d="M22 10v6M2 10l10-5 10 5-10 5z"/>
                  <path d="M6 12v5c0 2 2 3 6 3s6-1 6-3v-5"/>
                </svg>
              </div>
            </div>
            
            <!-- Card content -->
            <div class="flex-grow">
              <!-- Date range -->
              <div class="flex justify-between items-center flex-wrap gap-2 mb-3">
                <div class="text-sm font-medium px-3 py-1 bg-gradient-to-r from-purple-500/10 to-pink-500/10 rounded-full">
                  {formatDate(entry.data.dateStart)} - {formatDate(entry.data.dateEnd)}
                </div>
              </div>
              
              <!-- School and Degree info -->
              <div class="backdrop-blur-sm bg-white/50 dark:bg-gray-800/50 rounded-2xl p-8 border border-gray-200/50 dark:border-gray-700/50 shadow-xl transition-all duration-300 group-hover:shadow-2xl">
                <div class="flex flex-col md:flex-row md:justify-between md:items-start gap-2 mb-4">
                  <div>
                    <div class="text-2xl font-bold bg-gradient-to-r from-purple-600 to-pink-600 bg-clip-text text-transparent">
                      {entry.data.school}
                    </div>
                    <div class="text-lg font-medium mt-1 text-gray-700 dark:text-gray-300">
                      {entry.data.degree}
                    </div>
                  </div>
                </div>
                
                <!-- Description content -->
                <article class="prose dark:prose-invert max-w-none">
                  <entry.Content />
                </article>
                
                <!-- Achievements section with improved styling -->
                {entry.data.achievements && entry.data.achievements.length > 0 && (
                  <div class="mt-5 p-4 border-t border-gray-200/50 dark:border-gray-700/50">
                    <div class="flex items-center gap-2 mb-3">
                      <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5 text-amber-500" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                        <circle cx="12" cy="8" r="6"/>
                        <path d="M15.477 12.89 17 22l-5-3-5 3 1.523-9.11"/>
                      </svg>
                      <p class="font-medium bg-gradient-to-r from-amber-500 to-yellow-500 bg-clip-text text-transparent">Key Achievements</p>
                    </div>
                    <ul class="achievements-list space-y-2">
                      {entry.data.achievements.map(achievement => (
                        <li class="flex items-start gap-2 group">
                          <span class="inline-block w-1.5 h-1.5 rounded-full bg-gradient-to-r from-amber-500 to-yellow-500 mt-2"></span>
                          <span class="group-hover:bg-gradient-to-r group-hover:from-amber-500 group-hover:to-yellow-500 group-hover:bg-clip-text group-hover:text-transparent transition-all duration-300">{achievement}</span>
                        </li>
                      ))}
                    </ul>
                  </div>
                )}
              </div>
            </div>
          </div>
        </div>
      ))}
    </div>
  </div>
</PageLayout>

<style>
  /* Custom animations */
  @keyframes float {
    0%, 100% {
      transform: translateY(0px);
    }
    50% {
      transform: translateY(-10px);
    }
  }

  .animate-float {
    animation: float 6s ease-in-out infinite;
  }

  .timeline-entry {
    transition: transform 0.3s ease;
  }
  
  .timeline-entry:hover {
    transform: translateX(4px);
  }

  .education-card {
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
  }

  @media (prefers-color-scheme: dark) {
    .education-card {
      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
    }
  }

  .achievements-list li {
    position: relative;
    transition: transform 0.2s ease;
  }

  .achievements-list li:hover {
    transform: translateX(2px);
  }
</style>