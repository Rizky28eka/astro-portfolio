---
import { SITE, LINKS } from "@consts";
import { cn } from "@lib/utils";
const { pathname } = Astro.url;
const subpath = pathname.match(/[^/]+/g);
import Container from "@components/ui/Container.astro";

// Filter tautan yang diizinkan untuk navigasi utama (desktop)
// Link ini akan disembunyikan di mobile dan hanya muncul sebagai bagian dari menu mobile (drawer)
const allowedLinkTexts = [
  "Home",
  "Blog",
  "Education",
  "Projects",
  "Work",
  "Contact",
];

const filteredLinks = LINKS.filter((link) =>
  allowedLinkTexts.includes(link.TEXT)
);
---

<header
  id="header"
  class="fixed top-0 w-full h-16 z-50 bg-white/80 dark:bg-black/80 backdrop-blur-md border-b border-black/10 dark:border-white/10">
  <Container size="md">
    <div class="relative h-full w-full flex items-center">
      <div class="flex items-center gap-2 font-semibold">
        <a
          href="/"
          class="flex items-center gap-2 text-current hover:text-black dark:hover:text-white transition-colors duration-300 ease-in-out">
          <svg class="size-6 fill-current flex-shrink-0">
            <use href="/brand.svg#brand"></use>
          </svg>
          <span class="hidden sm:block">
            {SITE.TITLE}
          </span>
        </a>
      </div>

      <div class="flex-1 flex items-center justify-center px-4">
        <nav class="hidden md:flex items-center justify-center gap-2">
          {
            filteredLinks.map((LINK) => (
              <a
                href={LINK.HREF}
                class={cn(
                  "h-8 rounded-full px-4 text-sm font-medium",
                  "flex items-center justify-center whitespace-nowrap",
                  "transition-all duration-300 ease-in-out",
                  pathname === LINK.HREF || "/" + subpath?.[0] === LINK.HREF ?
                    "bg-black dark:bg-white text-white dark:text-black shadow-sm"
                  : "hover:bg-black/5 dark:hover:bg-white/10 hover:text-black dark:hover:text-white"
                )}>
                {LINK.TEXT}
              </a>
            ))
          }
        </nav>
      </div>

      <div class="flex items-center gap-2">
        <a
          href="/search"
          aria-label={`Search blog posts and projects on ${SITE.TITLE}`}
          class={cn(
            "hidden md:flex", // Disembunyikan di mobile
            "size-9 rounded-full p-2 items-center justify-center",
            "transition-all duration-300 ease-in-out",
            "border border-black/10 dark:border-white/20",
            pathname === "/search" || "/" + subpath?.[0] === "/search" ?
              "bg-black dark:bg-white text-white dark:text-black pointer-events-none"
            : "bg-transparent hover:bg-black/5 dark:hover:bg-white/10 stroke-current hover:stroke-black dark:hover:stroke-white"
          )}>
          <svg class="size-4">
            <use href="/ui.svg#search"></use>
          </svg>
        </a>

        <a
          href="/rss.xml"
          target="_blank"
          rel="noopener noreferrer"
          aria-label={`RSS feed for ${SITE.TITLE}`}
          class={cn(
            "hidden md:flex", // Disembunyikan di mobile
            "size-9 rounded-full p-2 items-center justify-center",
            "bg-transparent hover:bg-black/5 dark:hover:bg-white/10",
            "stroke-current hover:stroke-black dark:hover:stroke-white",
            "border border-black/10 dark:border-white/20",
            "transition-all duration-300 ease-in-out"
          )}>
          <svg class="size-4">
            <use href="/ui.svg#rss"></use>
          </svg>
        </a>

        <button
          id="header-theme-button"
          aria-label="Toggle light and dark theme"
          class={cn(
            "hidden md:flex", // Disembunyikan di mobile
            "size-9 rounded-full p-2 items-center justify-center",
            "bg-transparent hover:bg-black/5 dark:hover:bg-white/10",
            "stroke-current hover:stroke-black dark:hover:stroke-white",
            "border border-black/10 dark:border-white/20",
            "transition-all duration-300 ease-in-out"
          )}>
          <svg class="size-4 block dark:hidden">
            <use href="/ui.svg#sun"></use>
          </svg>
          <svg class="size-4 hidden dark:block">
            <use href="/ui.svg#moon"></use>
          </svg>
        </button>

        <button
          id="header-drawer-button"
          aria-label="Toggle mobile menu"
          class={cn(
            "flex md:hidden", // Disembunyikan di desktop
            "size-9 rounded-full p-2 items-center justify-center",
            "bg-transparent hover:bg-black/5 dark:hover:bg-white/10",
            "stroke-current hover:stroke-black dark:hover:stroke-white",
            "border border-black/10 dark:border-white/20",
            "transition-all duration-300 ease-in-out"
          )}>
          <svg id="drawer-open" class="size-4">
            <use href="/ui.svg#menu"></use>
          </svg>
          <svg id="drawer-close" class="size-4">
            <use href="/ui.svg#x"></use>
          </svg>
        </button>
      </div>
    </div>
  </Container>
</header>

<style>
  /* Mobile menu button states */
  #header-drawer-button > #drawer-open {
    @apply block;
  }

  #header-drawer-button > #drawer-close {
    @apply hidden;
  }

  #header-drawer-button.open > #drawer-open {
    @apply hidden;
  }

  #header-drawer-button.open > #drawer-close {
    @apply block;
  }

  /* Smooth backdrop blur transition */
  #header {
    backdrop-filter: blur(8px);
    -webkit-backdrop-filter: blur(8px);
  }

  /* Enhanced focus styles for accessibility */
  #header a:focus-visible,
  #header button:focus-visible {
    @apply outline-none ring-2 ring-black dark:ring-white ring-offset-2 ring-offset-white dark:ring-offset-black;
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const drawerButton = document.getElementById("header-drawer-button");
    const drawer = document.getElementById("drawer"); // Pastikan ada elemen <div id="drawer"> di luar header ini, biasanya di PageLayout atau di body
    const body = document.body;

    function openDrawer() {
      drawer?.classList.add("open");
      drawerButton?.classList.add("open");
      body.style.overflow = "hidden"; // Mencegah scrolling body saat drawer terbuka
    }
    function closeDrawer() {
      drawer?.classList.remove("open");
      drawerButton?.classList.remove("open");
      body.style.overflow = ""; // Mengembalikan scrolling body
    }
    function toggleDrawer() {
      if (drawer?.classList.contains("open")) {
        closeDrawer();
      } else {
        openDrawer();
      }
    }
    drawerButton?.addEventListener("click", toggleDrawer);

    // Menutup drawer saat klik di luar area drawer (overlay)
    drawer?.addEventListener("click", (e) => {
      if (e.target === drawer) {
        closeDrawer();
      }
    });
    // Menutup drawer dengan tombol Escape
    document.addEventListener("keydown", (e) => {
      if (e.key === "Escape" && drawer?.classList.contains("open")) {
        closeDrawer();
      }
    });
    // Menutup drawer setelah navigasi Astro (misalnya, klik tautan internal)
    document.addEventListener("astro:after-swap", closeDrawer);
  });
</script>
