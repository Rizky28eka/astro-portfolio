---
import { type CollectionEntry, getCollection } from "astro:content"
type Props = {
  entry: CollectionEntry<"blog"> | CollectionEntry<"projects">
}
// Get the requested entry
const { entry } = Astro.props
const { collection, data, slug } = entry
const { Content } = await entry.render()

// Get the next and prev entries (modulo to wrap index)
const items = (await getCollection(collection))
  .filter(post => !post.data.draft)
  .sort((a, b) => {
    // Handle both Date objects and date strings
    const dateA = a.data.date instanceof Date ? a.data.date : a.data.date ? new Date(a.data.date) : new Date(0);
    const dateB = b.data.date instanceof Date ? b.data.date : b.data.date ? new Date(b.data.date) : new Date(0);
    return dateB.getTime() - dateA.getTime(); // Sort newest first
  });
const index = items.findIndex(x => x.slug === entry.slug)
const prev = index > 0 ? items[index - 1] : items[items.length - 1]
const next = index < items.length - 1 ? items[index + 1] : items[0]

// Get related posts based on tags
const currentTags = data.tags || [];
const relatedPosts = items.filter(item => 
  item.slug !== slug && 
  item.data.tags && 
  item.data.tags.some((tag: string) => currentTags.includes(tag))
).slice(0, 3); // Limit to 3 related posts
---
<div>
  
  <article>
    <Content/>
  </article>
  <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
    <a href={`/${prev.collection}/${prev.slug}`} class="group p-4 gap-3 flex items-center border rounded-lg hover:bg-black/5 hover:dark:bg-white/10 border-black/15 dark:border-white/20 blend">
      <div class="order-2 w-full h-full group-hover:text-black group-hover:dark:text-white blend">
        <div class="flex flex-wrap gap-2">
          <div class="text-sm uppercase">
            Prev
          </div>
        </div>
        <div class="font-semibold mt-3 text-black dark:text-white">
          {prev.data.title}
        </div>
      </div>
      <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke-width="2.5" stroke-linecap="round" stroke-linejoin="round" class="order-1 stroke-current group-hover:stroke-black group-hover:dark:stroke-white rotate-180">
        <line x1="5" y1="12" x2="19" y2="12" class="scale-x-0 group-hover:scale-x-100 translate-x-4 group-hover:translate-x-1 transition-all duration-300 ease-in-out" />
        <polyline points="12 5 19 12 12 19" class="translate-x-0 group-hover:translate-x-1 transition-all duration-300 ease-in-out" />
      </svg>
    </a>
    <a href={`/${next.collection}/${next.slug}`} class="group p-4 gap-3 flex items-center border rounded-lg hover:bg-black/5 hover:dark:bg-white/10 border-black/15 dark:border-white/20 transition-colors duration-300 ease-in-out">
      <div class="w-full h-full text-right group-hover:text-black group-hover:dark:text-white blend">
        <div class="text-sm uppercase">
          Next
        </div>
        <div class="font-semibold mt-3 text-black dark:text-white">
          {next.data.title}
        </div>
      </div>
      <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke-width="2.5" stroke-linecap="round" stroke-linejoin="round" class="stroke-current group-hover:stroke-black group-hover:dark:stroke-white">
        <line x1="5" y1="12" x2="19" y2="12" class="scale-x-0 group-hover:scale-x-100 translate-x-4 group-hover:translate-x-1 transition-all duration-300 ease-in-out" />
        <polyline points="12 5 19 12 12 19" class="translate-x-0 group-hover:translate-x-1 transition-all duration-300 ease-in-out" />
      </svg>
    </a>
  </div>
  {relatedPosts.length > 0 && (
    <div class="mt-8 pt-8 border-t border-gray-200 dark:border-gray-700">
      <h3 class="text-xl font-bold mb-4 text-gray-900 dark:text-white">Related {collection === 'blog' ? 'Posts' : 'Projects'}</h3>
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
        {relatedPosts.map((post: CollectionEntry<"blog"> | CollectionEntry<"projects">) => (
          <a href={`/${post.collection}/${post.slug}`} class="group p-4 rounded-lg border border-gray-200 dark:border-gray-700 hover:border-purple-400 dark:hover:border-purple-500 transition-colors duration-300 ease-in-out block">
            <h4 class="font-semibold text-lg text-gray-900 dark:text-white group-hover:text-purple-600 dark:group-hover:text-purple-400 transition-colors">
              {post.data.title}
            </h4>
            <p class="text-sm text-gray-600 dark:text-gray-400 mt-1">
              {post.data.summary}
            </p>
          </a>
        ))}
      </div>
    </div>
  )}
</div>